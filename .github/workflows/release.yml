name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  docker-publish:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{env.DOCKERHUB_REPO}}:latest

  gh-release:
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install latest Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2

      - name: Build (release)
        run: cargo build --release

      - name: Rename (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: mv target/release/auth-rs target/release/auth-rs-macos

      - name: Rename (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: mv target/release/auth-rs target/release/auth-rs-linux

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          prerelease: false
          files: |
            target/release/auth-rs-linux
            target/release/auth-rs.exe
            target/release/auth-rs-macos
        env:
          GITHUB_TOKEN: ${{ github.token }}
